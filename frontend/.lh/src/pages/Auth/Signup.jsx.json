{
    "sourceFile": "src/pages/Auth/Signup.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1752755143030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752755203588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,8 @@\n   const [passwordStrength, setPasswordStrength] = useState(0);\r\n   const [passwordMatch, setPasswordMatch] = useState(true);\r\n   const [secretQuestions, setSecretQuestions] = useState([]);\r\n   const [showPassword, setShowPassword] = useState(false);\r\n-  const [showNewPassword, setShowNewPassword] = useState(false);\r\n   const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n \r\n \r\n   useEffect(() => {\r\n@@ -118,8 +117,10 @@\n       console.log(response);\r\n       if(response.status === 200 || response.status === 201){\r\n         navigate('/home');\r\n       }\r\n+    setShowConfirmPassword(false);\r\n+    setShowPassword(false);\r\n \r\n     } catch (error) {\r\n       console.log(error);\r\n     }\r\n"
                },
                {
                    "date": 1752755273973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -282,9 +282,9 @@\n                           </label>\r\n                           <input\r\n                             id=\"password\"\r\n                             name=\"password\"\r\n-                            type=\"password\"\r\n+                            type={showPassword ? \"text\" : \"password\"}\r\n                             required\r\n                             value={formData.password.trim()}\r\n                             onChange={handleChange}\r\n                             className=\"block w-full px-3 py-2 border border-[var(--color-gray-300)] rounded-md focus:outline-none focus:ring-[var(--color-primary-500)] focus:border-[var(--color-primary-500)] sm:text-sm\"\r\n"
                },
                {
                    "date": 1752755362454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -289,8 +289,19 @@\n                             onChange={handleChange}\r\n                             className=\"block w-full px-3 py-2 border border-[var(--color-gray-300)] rounded-md focus:outline-none focus:ring-[var(--color-primary-500)] focus:border-[var(--color-primary-500)] sm:text-sm\"\r\n                             placeholder=\"••••••••\"\r\n                           />\r\n+                          <button\r\n+                            type=\"button\"\r\n+                            className=\"absolute inset-y-0 right-0 pr-3 flex items-center hover:cursor-pointer\"\r\n+                            onClick={() => setShowPassword(!showPassword)}\r\n+                            >\r\n+                            {showCurrentPassword ? (\r\n+                            <EyeSlashIcon className=\"h-5 w-5 text-[var(--color-gray-400)]\" />\r\n+                            ) : (\r\n+                            <EyeIcon className=\"h-5 w-5 text-[var(--color-gray-400)]\" />\r\n+                            )}\r\n+                            </button>\r\n                           {formData.password && (\r\n                             <div className=\"mt-2\">\r\n                               <div className=\"flex items-center mb-1\">\r\n                                 <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\r\n"
                },
                {
                    "date": 1752755386041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n // src/pages/Signup.jsx\r\n import React, { useState, useEffect } from 'react';\r\n import { useNavigate, Link } from 'react-router-dom';\r\n import Footer from '../../components/Footer';\r\n+import { EyeIcon, EyeSlashIcon } from '@heroicons/react/24/outline';\r\n import axios from 'axios';\r\n \r\n function Signup() {\r\n   const [formData, setFormData] = useState({\r\n"
                },
                {
                    "date": 1752755425316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -295,9 +295,9 @@\n                             type=\"button\"\r\n                             className=\"absolute inset-y-0 right-0 pr-3 flex items-center hover:cursor-pointer\"\r\n                             onClick={() => setShowPassword(!showPassword)}\r\n                             >\r\n-                            {showCurrentPassword ? (\r\n+                            {showPassword ? (\r\n                             <EyeSlashIcon className=\"h-5 w-5 text-[var(--color-gray-400)]\" />\r\n                             ) : (\r\n                             <EyeIcon className=\"h-5 w-5 text-[var(--color-gray-400)]\" />\r\n                             )}\r\n"
                },
                {
                    "date": 1752755495082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -280,8 +280,9 @@\n                         <div>\r\n                           <label htmlFor=\"password\" className=\"block text-sm font-medium text-[var(--color-gray-700)] mb-1\">\r\n                             Password\r\n                           </label>\r\n+                          <div className=\"relative\">\r\n                           <input\r\n                             id=\"password\"\r\n                             name=\"password\"\r\n                             type={showPassword ? \"text\" : \"password\"}\r\n@@ -301,8 +302,9 @@\n                             ) : (\r\n                             <EyeIcon className=\"h-5 w-5 text-[var(--color-gray-400)]\" />\r\n                             )}\r\n                             </button>\r\n+                            </div>\r\n                           {formData.password && (\r\n                             <div className=\"mt-2\">\r\n                               <div className=\"flex items-center mb-1\">\r\n                                 <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\r\n"
                },
                {
                    "date": 1752755567115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -329,18 +329,31 @@\n                         <div>\r\n                           <label htmlFor=\"confirm_password\" className=\"block text-sm font-medium text-[var(--color-gray-700)] mb-1\">\r\n                             Confirm Password\r\n                           </label>\r\n+                          <div className=\"relative\">\r\n                           <input\r\n                             id=\"confirm_password\"\r\n                             name=\"confirm_password\"\r\n-                            type=\"password\"\r\n+                            type={showConfirmPassword ? \"text\" : \"password\"}\r\n                             required\r\n                             value={formData.confirm_password.trim()}\r\n                             onChange={handleChange}\r\n                             className={`block w-full px-3 py-2 border ${passwordMatch ? 'border-[var(--color-gray-300)]' : 'border-red-300'} rounded-md focus:outline-none focus:ring-[var(--color-primary-500)] focus:border-[var(--color-primary-500)] sm:text-sm`}\r\n                             placeholder=\"••••••••\"\r\n                           />\r\n+                          <button\r\n+                          type=\"button\"\r\n+                          className=\"absolute inset-y-0 right-0 pr-3 flex items-center hover:cursor-pointer\"\r\n+                          onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n+                        >\r\n+                          {showConfirmPassword ? (\r\n+                            <EyeSlashIcon className=\"h-5 w-5 text-[var(--color-gray-400)]\" />\r\n+                          ) : (\r\n+                            <EyeIcon className=\"h-5 w-5 text-[var(--color-gray-400)]\" />\r\n+                          )}\r\n+                        </button>\r\n+                        </div>\r\n                           {!passwordMatch && formData.confirm_password && (\r\n                             <p className=\"mt-1 text-sm text-red-600\">Passwords don't match</p>\r\n                           )}\r\n                         </div>\r\n"
                },
                {
                    "date": 1752755803074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -428,9 +428,9 @@\n                 <div className=\"pt-4\">\r\n                   <button\r\n                     type=\"submit\"\r\n                     disabled={!emailValid || passwordStrength < 3 || !passwordMatch}\r\n-                    className={`w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-gradient-to-r from-[var(--color-primary-600)] to-[var(--color-accent-500)] hover:from-[var(--color-primary-700)] hover:to-[var(--color-accent-600)] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[var(--color-primary-500)] transition ${(!emailValid || passwordStrength < 3 || !passwordMatch) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n+                    className={`w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-gradient-to-r from-[var(--color-primary-600)] to-[var(--color-accent-500)] hover:from-[var(--color-primary-700)] hover:to-[var(--color-accent-600)] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[var(--color-primary-500)] hover:cursor-pointer transition ${(!emailValid || passwordStrength < 3 || !passwordMatch) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n                   >\r\n                     Create Account\r\n                   </button>\r\n                 </div>\r\n"
                },
                {
                    "date": 1752756012808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,8 +117,10 @@\n       const response = await axios.post(`${API_URL}/user/register/`,payload);\r\n       console.log(response);\r\n       if(response.status === 200 || response.status === 201){\r\n         navigate('/home');\r\n+        localStorage.setItem('access', response.data.access);\r\n+        localStorage.setItem('refresh', response.data.refresh);\r\n       }\r\n     setShowConfirmPassword(false);\r\n     setShowPassword(false);\r\n \r\n"
                }
            ],
            "date": 1752755143030,
            "name": "Commit-0",
            "content": "// src/pages/Signup.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport Footer from '../../components/Footer';\r\nimport axios from 'axios';\r\n\r\nfunction Signup() {\r\n  const [formData, setFormData] = useState({\r\n  email: '',\r\n  username: '',\r\n  first_name: '',\r\n  last_name: '',\r\n  password: '',\r\n  confirm_password: '',\r\n  secretQuestion1: \"\",\r\n  secretAnswer1: \"\",\r\n  secretQuestion2: \"\",\r\n  secretAnswer2: \"\",\r\n  });\r\n\r\n  const API_URL = import.meta.env.VITE_API_URL;\r\n\r\n  const navigate = useNavigate();  // initialize the hook\r\n\r\n  const [emailValid, setEmailValid] = useState(false);\r\n  const [passwordStrength, setPasswordStrength] = useState(0);\r\n  const [passwordMatch, setPasswordMatch] = useState(true);\r\n  const [secretQuestions, setSecretQuestions] = useState([]);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showNewPassword, setShowNewPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    // Email validation\r\n    getSecretQuestions();\r\n\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    setEmailValid(emailRegex.test(formData.email));\r\n\r\n    // Password strength calculation\r\n    let strength = 0;\r\n    if (formData.password.length > 0) strength += 1;\r\n    if (formData.password.length >= 8) strength += 1;\r\n    if (/[A-Z]/.test(formData.password)) strength += 1;\r\n    if (/[0-9]/.test(formData.password)) strength += 1;\r\n    if (/[^A-Za-z0-9]/.test(formData.password)) strength += 1;\r\n    setPasswordStrength(strength);\r\n\r\n    // Password match validation\r\n    setPasswordMatch(formData.password === formData.confirm_password || formData.confirm_password === '');\r\n  }, [formData]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const getSecretQuestions = async () =>{\r\n    // e.preventDefault();\r\n    try {\r\n      const questions = await axios.get(`${API_URL}/user/secret-questions/`);\r\n      console.log('Secret Questions: ',questions.data);\r\n      setSecretQuestions(questions.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getSecretQuestions();\r\n}, []);\r\n\r\n// Handler when user selects a question from dropdown for index i\r\nconst handleQuestionChange = (index, questionId) => {\r\n  const updatedAnswers = [...secretAnswers];\r\n  updatedAnswers[index].question_id = Number(questionId); // convert to number\r\n  setSecretAnswers(updatedAnswers);\r\n};\r\n\r\n// Handler when user types answer for index i\r\nconst handleAnswerChange = (index, answer) => {\r\n  const updatedAnswers = [...secretAnswers];\r\n  updatedAnswers[index].answer = answer;\r\n  setSecretAnswers(updatedAnswers);\r\n};\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!emailValid || passwordStrength < 3 || !passwordMatch) return;\r\nconst secret_answers = [\r\n    {\r\n      question_id: parseInt(formData.secretQuestion1),\r\n      answer: formData.secretAnswer1.trim(),\r\n    },\r\n    {\r\n      question_id: parseInt(formData.secretQuestion2),\r\n      answer: formData.secretAnswer2.trim(),\r\n    },\r\n  ];\r\n\r\n  const payload = {\r\n    email: formData.email,\r\n    username: formData.username,\r\n    first_name: formData.first_name,\r\n    last_name: formData.last_name,\r\n    password: formData.password,\r\n    confirm_password: formData.confirm_password, \r\n    secret_answers, \r\n  };\r\n\r\n    try {\r\n      console.log(formData);\r\n      const response = await axios.post(`${API_URL}/user/register/`,payload);\r\n      console.log(response);\r\n      if(response.status === 200 || response.status === 201){\r\n        navigate('/home');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getPasswordStrengthColor = () => {\r\n    if (passwordStrength === 0) return 'bg-gray-200';\r\n    if (passwordStrength <= 2) return 'bg-red-500';\r\n    if (passwordStrength === 3) return 'bg-yellow-500';\r\n    if (passwordStrength >= 4) return 'bg-green-500';\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col bg-gradient-to-br from-[var(--color-primary-50)] to-[var(--color-gray-50)]\">\r\n      {/* Header */}\r\n      <header className=\"bg-white shadow-sm full-width\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"h-8 w-8 rounded-md bg-white flex items-center justify-center glow-effect\">\r\n              <svg className=\"h-5 w-5 text-[var(--color-primary-600)]\" viewBox=\"0 0 24 24\">\r\n                <path fill=\"currentColor\" d=\"M12,2L1,12H4V22H20V12H23M11,15V18H13V15M15,15V18H17V15M7,15V18H9V15Z\" />\r\n              </svg>\r\n            </div>\r\n            <span className=\"ml-2 text-xl font-bold\">ML Playground</span>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Main Content */}\r\n      <main className=\"flex-grow flex items-center justify-center py-8 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"w-full max-w-4xl\"> {/* Increased width */}\r\n          {/* Styled Form Box */}\r\n          <div className=\"bg-white rounded-xl shadow-xl overflow-hidden border border-[var(--color-gray-200)]\">\r\n            {/* Form Header */}\r\n            <div className=\"bg-gradient-to-r from-[var(--color-primary-600)] to-[var(--color-accent-500)] p-6 text-center\">\r\n              <h2 className=\"text-2xl font-bold text-white\">\r\n                Create Your Account\r\n              </h2>\r\n              <p className=\"mt-1 text-[var(--color-primary-100)]\">\r\n                Join ML Playground today\r\n              </p>\r\n            </div>\r\n\r\n            {/* Form Body - Two Column Layout */}\r\n            <div className=\"p-6 sm:p-8\">\r\n              <form className=\"space-y-4\" onSubmit={handleSubmit}>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\"> {/* Two column layout */}\r\n                  {/* Left Column */}\r\n                  <div className=\"space-y-4\">\r\n                    {/* Personal Info */}\r\n                    <div>\r\n                      <h3 className=\"text-lg font-medium text-[var(--color-gray-900)] mb-4 pb-2 border-b border-[var(--color-gray-200)]\">\r\n                        Personal Information\r\n                      </h3>\r\n                      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n                        <div>\r\n                          <label htmlFor=\"first_name\" className=\"block text-sm font-medium text-[var(--color-gray-700)] mb-1\">\r\n                            First Name\r\n                          </label>\r\n                          <input\r\n                            id=\"first_name\"\r\n                            name=\"first_name\"\r\n                            type=\"text\"\r\n                            required\r\n                            value={formData.first_name.trim()}\r\n                            onChange={handleChange}\r\n                            className=\"block w-full px-3 py-2 border border-[var(--color-gray-300)] rounded-md focus:outline-none focus:ring-[var(--color-primary-500)] focus:border-[var(--color-primary-500)] sm:text-sm\"\r\n                            placeholder=\"John\"\r\n                          />\r\n                        </div>\r\n                        <div>\r\n                          <label htmlFor=\"last_name\" className=\"block text-sm font-medium text-[var(--color-gray-700)] mb-1\">\r\n                            Last Name\r\n                          </label>\r\n                          <input\r\n                            id=\"last_name\"\r\n                            name=\"last_name\"\r\n                            type=\"text\"\r\n                            required\r\n                            value={formData.last_name.trim()}\r\n                            onChange={handleChange}\r\n                            className=\"block w-full px-3 py-2 border border-[var(--color-gray-300)] rounded-md focus:outline-none focus:ring-[var(--color-primary-500)] focus:border-[var(--color-primary-500)] sm:text-sm\"\r\n                            placeholder=\"Doe\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Account Info */}\r\n                    <div>\r\n                      <h3 className=\"text-lg font-medium text-[var(--color-gray-900)] mb-4 pb-2 border-b border-[var(--color-gray-200)]\">\r\n                        Account Details\r\n                      </h3>\r\n                      <div className=\"space-y-4\">\r\n                        <div>\r\n                          <label htmlFor=\"username\" className=\"block text-sm font-medium text-[var(--color-gray-700)] mb-1\">\r\n                            Username\r\n                          </label>\r\n                          <div className=\"relative rounded-md shadow-sm\">\r\n                            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                              <svg className=\"h-5 w-5 text-[var(--color-gray-400)]\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n                              </svg>\r\n                            </div>\r\n                            <input\r\n                              id=\"username\"\r\n                              name=\"username\"\r\n                              type=\"text\"\r\n                              required\r\n                              value={formData.username.trim()}\r\n                              onChange={handleChange}\r\n                              className=\"block w-full pl-10 pr-3 py-2 border border-[var(--color-gray-300)] rounded-md focus:outline-none focus:ring-[var(--color-primary-500)] focus:border-[var(--color-primary-500)] sm:text-sm\"\r\n                              placeholder=\"johndoe\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                          <label htmlFor=\"email\" className=\"block text-sm font-medium text-[var(--color-gray-700)] mb-1\">\r\n                            Email\r\n                          </label>\r\n                          <div className=\"relative rounded-md shadow-sm\">\r\n                            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                              <svg className=\"h-5 w-5 text-[var(--color-gray-400)]\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\r\n                              </svg>\r\n                            </div>\r\n                            <input\r\n                              id=\"email\"\r\n                              name=\"email\"\r\n                              type=\"email\"\r\n                              autoComplete=\"email\"\r\n                              required\r\n                              value={formData.email.trim()}\r\n                              onChange={handleChange}\r\n                              className={`block w-full pl-10 pr-3 py-2 border ${emailValid || !formData.email ? 'border-[var(--color-gray-300)]' : 'border-red-300'} rounded-md focus:outline-none focus:ring-[var(--color-primary-500)] focus:border-[var(--color-primary-500)] sm:text-sm`}\r\n                              placeholder=\"you@example.com\"\r\n                            />\r\n                          </div>\r\n                          {formData.email && !emailValid && (\r\n                            <p className=\"mt-1 text-sm text-red-600\">Please enter a valid email address</p>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Right Column */}\r\n                  <div className=\"space-y-4\">\r\n                    {/* Password Fields */}\r\n                    <div>\r\n                      <h3 className=\"text-lg font-medium text-[var(--color-gray-900)] mb-4 pb-2 border-b border-[var(--color-gray-200)]\">\r\n                        Security Information\r\n                      </h3>\r\n                      <div className=\"space-y-4\">\r\n                        <div>\r\n                          <label htmlFor=\"password\" className=\"block text-sm font-medium text-[var(--color-gray-700)] mb-1\">\r\n                            Password\r\n                          </label>\r\n                          <input\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            required\r\n                            value={formData.password.trim()}\r\n                            onChange={handleChange}\r\n                            className=\"block w-full px-3 py-2 border border-[var(--color-gray-300)] rounded-md focus:outline-none focus:ring-[var(--color-primary-500)] focus:border-[var(--color-primary-500)] sm:text-sm\"\r\n                            placeholder=\"••••••••\"\r\n                          />\r\n                          {formData.password && (\r\n                            <div className=\"mt-2\">\r\n                              <div className=\"flex items-center mb-1\">\r\n                                <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\r\n                                  <div \r\n                                    className={`h-2.5 rounded-full ${getPasswordStrengthColor()}`}\r\n                                    style={{ width: `${passwordStrength * 20}%` }}\r\n                                  ></div>\r\n                                </div>\r\n                                <span className=\"ml-2 text-xs text-[var(--color-gray-600)]\">\r\n                                  {passwordStrength <= 2 ? 'Weak' : passwordStrength === 3 ? 'Good' : 'Strong'}\r\n                                </span>\r\n                              </div>\r\n                              <ul className=\"text-xs text-[var(--color-gray-600)] list-disc list-inside\">\r\n                                <li className={formData.password.length >= 8 ? 'text-green-600' : ''}>At least 8 characters</li>\r\n                                <li className={/[A-Z]/.test(formData.password) ? 'text-green-600' : ''}>Contains uppercase</li>\r\n                                <li className={/[0-9]/.test(formData.password) ? 'text-green-600' : ''}>Contains number</li>\r\n                              </ul>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n\r\n                        <div>\r\n                          <label htmlFor=\"confirm_password\" className=\"block text-sm font-medium text-[var(--color-gray-700)] mb-1\">\r\n                            Confirm Password\r\n                          </label>\r\n                          <input\r\n                            id=\"confirm_password\"\r\n                            name=\"confirm_password\"\r\n                            type=\"password\"\r\n                            required\r\n                            value={formData.confirm_password.trim()}\r\n                            onChange={handleChange}\r\n                            className={`block w-full px-3 py-2 border ${passwordMatch ? 'border-[var(--color-gray-300)]' : 'border-red-300'} rounded-md focus:outline-none focus:ring-[var(--color-primary-500)] focus:border-[var(--color-primary-500)] sm:text-sm`}\r\n                            placeholder=\"••••••••\"\r\n                          />\r\n                          {!passwordMatch && formData.confirm_password && (\r\n                            <p className=\"mt-1 text-sm text-red-600\">Passwords don't match</p>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Security Questions */}\r\n                    <div className=\"space-y-4\">\r\n                      <div>\r\n                        <label htmlFor=\"secretQuestion1\" className=\"block text-sm font-medium text-[var(--color-gray-700)] mb-1\">\r\n                          Security Question 1\r\n                        </label>\r\n                        <select\r\n                            id=\"secretQuestion1\"\r\n                            name=\"secretQuestion1\"\r\n                            required\r\n                            value={formData.secretQuestion1}\r\n                            onChange={handleChange}\r\n                            className=\"block w-full px-3 py-2 border border-[var(--color-gray-300)] rounded-md focus:outline-none focus:ring-[var(--color-primary-500)] focus:border-[var(--color-primary-500)] sm:text-sm\"\r\n                          >\r\n                            <option value=\"\">Select a question</option>\r\n                            {Array.isArray(secretQuestions) &&\r\n                              secretQuestions.map((q) => (\r\n                                <option key={q.id} value={q.id}>\r\n                                  {q.question}\r\n                                </option>\r\n                              ))}\r\n                        </select>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"secretAnswer1\"\r\n                          required\r\n                          value={formData.secretAnswer1.trim()}\r\n                          onChange={handleChange}\r\n                          className=\"block w-full mt-2 px-3 py-2 border border-[var(--color-gray-300)] rounded-md focus:outline-none focus:ring-[var(--color-primary-500)] focus:border-[var(--color-primary-500)] sm:text-sm\"\r\n                          placeholder=\"Your answer\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div>\r\n                        <label htmlFor=\"secretQuestion2\" className=\"block text-sm font-medium text-[var(--color-gray-700)] mb-1\">\r\n                          Security Question 2\r\n                        </label>\r\n                        <select\r\n                          id=\"secretQuestion2\"\r\n                          name=\"secretQuestion2\"\r\n                          required\r\n                          value={formData.secretQuestion2}\r\n                          onChange={handleChange}\r\n                          className=\"block w-full px-3 py-2 border border-[var(--color-gray-300)] rounded-md focus:outline-none focus:ring-[var(--color-primary-500)] focus:border-[var(--color-primary-500)] sm:text-sm\"\r\n                        >\r\n                          <option value=\"\">Select a question</option>\r\n                          {secretQuestions.filter(q => q !== formData.secretQuestion1).map((ques) => (\r\n                            <option key={`2-${ques.id}`} value={ques.id}>{ques.question}</option>\r\n                          ))}\r\n                        </select>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"secretAnswer2\"\r\n                          required\r\n                          value={formData.secretAnswer2.trim()}\r\n                          onChange={handleChange}\r\n                          className=\"block w-full mt-2 px-3 py-2 border border-[var(--color-gray-300)] rounded-md focus:outline-none focus:ring-[var(--color-primary-500)] focus:border-[var(--color-primary-500)] sm:text-sm\"\r\n                          placeholder=\"Your answer\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Submit Button */}\r\n                <div className=\"pt-4\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    disabled={!emailValid || passwordStrength < 3 || !passwordMatch}\r\n                    className={`w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-gradient-to-r from-[var(--color-primary-600)] to-[var(--color-accent-500)] hover:from-[var(--color-primary-700)] hover:to-[var(--color-accent-600)] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[var(--color-primary-500)] transition ${(!emailValid || passwordStrength < 3 || !passwordMatch) ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n                  >\r\n                    Create Account\r\n                  </button>\r\n                </div>\r\n              </form>\r\n\r\n              {/* Login Link */}\r\n              <div className=\"mt-6 text-center\">\r\n                <p className=\"text-sm text-[var(--color-gray-600)]\">\r\n                  Already have an account?{' '}\r\n                  <Link to=\"/login\" className=\"font-medium text-[var(--color-primary-600)] hover:text-[var(--color-primary-500)]\">\r\n                    Sign in\r\n                  </Link>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;"
        }
    ]
}